@page "/"

<div class="d-flex justify-content-around tt-primary pt-3 pb-2">
    <p class="display-1 p-1 " @onclick="SwitchSubjectLeft">
        <span class="oi oi-arrow-circle-left pt-3 w-75 tt-icon-white"></span>
    </p>

    <h1 class="pt-4 tt-sub w-50 text-center">@currentSubject.ToString()</h1>

    <p class="display-1 p-1 " @onclick="SwitchSubjectRight">
        <span class="oi oi-arrow-circle-right pt-3 tt-icon-white"></span>
    </p>
</div>
<ConnectedBar />

<div class="p-5">
<div class="tt-sub p-5 text-center display-1">@today.ToLongTimeString()</div>
</div>

<div class="d-flex justify-content-around tt-icon-black px-5">
    @if (!timerActive)
    {
        <p class="display-3">
            <span class="oi oi-media-play" @onclick="(async () => {PlayTimer();})"></span>
        </p>
    }
    else
    {
        <p class="display-3">
            <span class="oi oi-media-pause" @onclick="(() => { timerActive = false;})"></span>
        </p>
    }
    <p class="display-3">
        <span class="oi oi-media-stop" @onclick="(() => { timerActive = false; today = DateTime.Today; StateHasChanged();})"></span>
    </p>
</div>

@code {
    DateTime today = DateTime.Today;
    System.Diagnostics.Stopwatch stopwatch = new System.Diagnostics.Stopwatch();

    bool timerActive = false;

    enum Subjects
    {
        None,
        Math,
        Biology,
        Sports
    };

    private Subjects currentSubject = Subjects.Math;

    private async Task PlayTimer()
    {
        timerActive = true;
        while(timerActive)
        {
            await Task.Delay(1000);
            if(timerActive)
            {
                today = today.AddSeconds(1);
                StateHasChanged();
            }
        }
    }

    private void PauseTimer()
    {
        stopwatch.Stop();
    }

    private void SwitchSubjectLeft()
    {
        currentSubject--;
        if (currentSubject < Subjects.None)
        {
            currentSubject = Subjects.Sports;
        }
    }

    private void SwitchSubjectRight()
    {
        currentSubject++;
        if (currentSubject > Subjects.Sports)
        {
            currentSubject = Subjects.None;
        }
    }
}

